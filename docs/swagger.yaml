basePath: /chaos/api/v1
definitions:
  cpu.RequestPayload:
    properties:
      job:
        type: string
      percentage:
        type: integer
      target:
        type: string
    type: object
  docker.RequestPayload:
    properties:
      containerName:
        type: string
      job:
        type: string
      target:
        type: string
    type: object
  network.RequestPayload:
    properties:
      corrupt correlation:
        type: number
      corrupt probability:
        type: number
      delay correlation:
        type: number
      device:
        type: string
      duplicate:
        type: number
      duplicate correlation:
        type: number
      gap:
        type: integer
      jitter:
        type: integer
      job:
        type: string
      latency:
        type: integer
      limit:
        type: integer
      loss:
        type: number
      loss correlation:
        type: number
      reorder correlation:
        type: number
      reorder probability:
        type: number
      target:
        type: string
    type: object
  recover.Alert:
    properties:
      labels:
        $ref: '#/definitions/recover.Labels'
      status:
        type: string
    type: object
  recover.Labels:
    properties:
      recoverAll:
        type: boolean
      recoverJob:
        type: string
      recoverTarget:
        type: string
    type: object
  recover.requestPayload:
    properties:
      alerts:
        items:
          $ref: '#/definitions/recover.Alert'
        type: array
    type: object
  response.Payload:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  response.RecoverMessage:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  response.RecoverResponsePayload:
    properties:
      recoverMessages:
        items:
          $ref: '#/definitions/response.RecoverMessage'
        type: array
      status:
        type: integer
    type: object
  server.RequestPayload:
    properties:
      job:
        type: string
      target:
        type: string
    type: object
  service.RequestPayload:
    properties:
      job:
        type: string
      serviceName:
        type: string
      target:
        type: string
    type: object
host: localhost:8090
info:
  contact: {}
  description: This is the chaos master API.
  title: Chaos Master API
  version: "1.0"
paths:
  /cpu:
    post:
      consumes:
      - application/json
      description: Perform CPU spike injection. Provide a percentage that is proportionate
        to your logical CPUs.
      parameters:
      - description: Specify to perform a start or a stop for the CPU injection
        in: query
        name: action
        required: true
        type: string
      - description: Specify the job name, percentage and target
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/cpu.RequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Payload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Payload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Payload'
      summary: Inject CPU failures
      tags:
      - Failure injections
  /docker:
    post:
      consumes:
      - application/json
      description: Perform start or stop action on a container. If random is specified
        you do not have to provide a target
      parameters:
      - description: Specify to perform action for container on random target
        in: query
        name: do
        type: string
      - description: Specify to perform a start or a stop on the specified container
        in: query
        name: action
        required: true
        type: string
      - description: Specify the job name, container name and target
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/docker.RequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Payload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Payload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Payload'
      summary: Inject docker failures
      tags:
      - Failure injections
  /master/status:
    get:
      consumes:
      - application/json
      description: Bot status
      produces:
      - application/json
      responses:
        "200":
          description: Bots status
          schema:
            type: string
        "500":
          description: ok
          schema:
            type: string
      summary: get master status
      tags:
      - Status
  /network:
    post:
      consumes:
      - application/json
      description: Start and stop network failures
      parameters:
      - description: Specify to perform a start or a stop for a network failure injection
        in: query
        name: action
        required: true
        type: string
      - description: Specify the job name, device name, target and netem injection
          arguments
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/network.RequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Payload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Payload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Payload'
      summary: Inject network failures
      tags:
      - Failure injections
  /recover/alertmanager:
    post:
      consumes:
      - application/json
      description: Alertmanager webhook to recover from failures
      parameters:
      - description: Create request payload that contains the recovery details
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/recover.requestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RecoverResponsePayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.RecoverResponsePayload'
      summary: recover from failures
      tags:
      - Recover
  /server:
    post:
      consumes:
      - application/json
      description: Perform Server fault injection. Supports action to stop the server
        specified. A shutdown will be executed after 1 minute.
      parameters:
      - description: Specify to perform a stop action on the server
        in: query
        name: action
        required: true
        type: string
      - description: Specify the job name and target
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/server.RequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Payload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Payload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Payload'
      summary: Inject Server failures
      tags:
      - Failure injections
  /service:
    post:
      consumes:
      - application/json
      description: Perform start or stop action on a service
      parameters:
      - description: Specify to perform a start or a stop on the specified service
        in: query
        name: action
        required: true
        type: string
      - description: Specify the job name, service name and target
        in: body
        name: requestPayload
        required: true
        schema:
          $ref: '#/definitions/service.RequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Payload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Payload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Payload'
      summary: Inject service failures
      tags:
      - Failure injections
swagger: "2.0"
